{
    "atomType": "Molecule",
    "name": "offsetShape",
    "x": 0,
    "y": 0,
    "uniqueID": 1731087530580,
    "ioValues": [
        {
            "name": "shape",
            "ioValue": 10
        }
    ],
    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.98,
            "y": 0.5,
            "uniqueID": 1731087539656,
            "ioValues": [
                {
                    "name": "number or geometry",
                    "ioValue": 1731091825974
                }
            ],
            "description": "Connect geometry here to make it available in the next level up. "
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.4303882195448461,
            "y": 0.6938775510204082,
            "uniqueID": 1731087553702,
            "ioValues": [
                {
                    "name": "input1",
                    "ioValue": 1731087666179
                },
                {
                    "name": "height",
                    "ioValue": 10
                }
            ],
            "description": "Defines a Replicad code block.",
            "codeVersion": 1,
            "code": "//Inputs:[input1, height];\n\nlet shape = drawRectangle(5,7)\n\nconst newPlane = new Plane().pivot(0, 'Y');\nconst center =library[input1].geometry[0].boundingBox.center\n\nshape = library[input1].geometry[0].clone().scale(1.1, center)\nconsole.log(shape)\n\n return { geometry: [shape], tags: [],\n      color: '#A3CE5B',\n      plane: newPlane,\n      bom:[]}\n\n\n    /**\n    To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n    If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n    Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n    https://replicad.xyz/docs/introapp/UserGuide.html \n    Return a replicad object that includes geometry, color, tags and plane. \n\n\n    Example Code Atom:\n\n      Inputs:[shape, x];\n\n      let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n\n      return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n\n      - See more examples at _______ \n\n\n    */\n"
        },
        {
            "atomType": "Input",
            "name": "shape",
            "x": 0.04,
            "y": 0.5947521865889213,
            "uniqueID": 1731087601343,
            "ioValues": [],
            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable"
        },
        {
            "atomType": "Circle",
            "name": "Circle",
            "x": 0.1539491298527443,
            "y": 0.3323615160349854,
            "uniqueID": 1731087664456,
            "ioValues": [
                {
                    "name": "diameter",
                    "ioValue": 10
                }
            ],
            "description": "Creates a new circle."
        },
        {
            "atomType": "Extrude",
            "name": "Extrude",
            "x": 0.2884872824631861,
            "y": 0.44023323615160354,
            "uniqueID": 1731087666179,
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": 1731087664456
                },
                {
                    "name": "height",
                    "ioValue": 10
                }
            ],
            "description": "Extrudes a 2D shape. Input can be negitive. "
        },
        {
            "atomType": "Difference",
            "name": "Difference",
            "x": 0.6391659111514053,
            "y": 0.29154518950437314,
            "uniqueID": 1731091700704,
            "ioValues": [
                {
                    "name": "geometry2",
                    "ioValue": 1731087666179
                },
                {
                    "name": "geometry1",
                    "ioValue": 1731087553702
                }
            ],
            "description": "Subtracts shape two from shape one."
        },
        {
            "atomType": "Color",
            "name": "Color",
            "x": 0.6953762466001814,
            "y": 0.685131195335277,
            "uniqueID": 1731091800060,
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": 1731091700704
                }
            ],
            "description": "Changes the color of the shape.",
            "selectedColorIndex": 21
        },
        {
            "atomType": "Join",
            "name": "Assembly",
            "x": 0.825301204819277,
            "y": 0.5043731778425656,
            "uniqueID": 1731091825974,
            "ioValues": [
                {
                    "name": "Shape 1",
                    "ioValue": 1731091800060
                },
                {
                    "name": "Shape 3",
                    "ioValue": 1731087666179
                }
            ],
            "description": "Pick between assembly and fusion to join input geometries. Assembly takes multiple shapes together into one, shapes higher in the inputs list will cut into shapes lower on the input list where they overlap. Fusion takes all shapes or sketches and fuses them permanently into a single shape",
            "unionType": "Assembly"
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry1",
            "ap2Primary": false,
            "ap1ID": 1731087553702,
            "ap2ID": 1731091700704
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap2Primary": true,
            "ap1ID": 1731087664456,
            "ap2ID": 1731087666179
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "input1",
            "ap2Primary": false,
            "ap1ID": 1731087666179,
            "ap2ID": 1731087553702
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry2",
            "ap2Primary": false,
            "ap1ID": 1731087666179,
            "ap2ID": 1731091700704
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "Shape 3",
            "ap2Primary": false,
            "ap1ID": 1731087666179,
            "ap2ID": 1731091825974
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap2Primary": true,
            "ap1ID": 1731091700704,
            "ap2ID": 1731091800060
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "Shape 1",
            "ap2Primary": false,
            "ap1ID": 1731091800060,
            "ap2ID": 1731091825974
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap2Primary": false,
            "ap1ID": 1731091825974,
            "ap2ID": 1731087539656
        }
    ],
    "unitsKey": "Inches",
    "fileTypeVersion": 1,
    "compiledBom": [],
    "filetypeVersion": 1
}